{"ast":null,"code":"var _jsxFileName = \"/home/dattd/Pictures/bootcamp-5/bc-5-frontend/src/pages/HomeScreenPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getAllBooks, getBooksReading } from '../.../../../service/BookManagementService';\nimport Banner from '../../components/molecules/Banner';\nimport BookCardList from '../../components/organisms/BookCardList';\nimport BooksReadingList from '../../components/organisms/BooksReadingList';\nimport EmptyScreenComponents from '../../components/organisms/EmptyScreen';\nimport OverviewList from '../../components/organisms/OverviewList';\nimport TopicsFollowingList from '../../components/organisms/TopicsFollowingList';\nimport EmptyScreenTemplate from '../../templates/EmptyScreenTemplate';\nimport HomeScreenTemplate from '../../templates/HomeScreenTemplate';\nimport { overviewImages, userReadStatus } from '../../utils/constants';\nexport default function HomeScreenPage(props) {\n  _s();\n\n  const [recommendedBooks, setRecommendedBooks] = useState([]);\n  const [overViewStatus, setOverviewStatus] = useState([]);\n  const flag = true;\n  useEffect(() => {\n    getBooks();\n    getBooksReadingList();\n  }, [props.userTarget]);\n  let BOOKSTATUS = {\n    [userReadStatus.currentlyReading]: 0,\n    [userReadStatus.toRead]: 0,\n    [userReadStatus.booksRead]: 0,\n    [userReadStatus.target]: props.userTarget\n  };\n  let IMAGESTATUS = [overviewImages.currentlyReading, overviewImages.toRead, overviewImages.booksRead, overviewImages.target];\n\n  const getBooks = async () => {\n    const books = await getAllBooks();\n    setRecommendedBooks(books);\n  };\n\n  const getBooksReadingList = async () => {\n    const userBooks = await getBooksReading();\n    updateStatusCount(userBooks);\n    const overViewStatsData = createOverviewData();\n    console.log(\"overview\", overViewStatus);\n    setOverviewStatus(overViewStatsData);\n  };\n\n  const updateStatusCount = readingBooks => {\n    readingBooks.map(book => {\n      switch (book.readStatus) {\n        case 'READING':\n          BOOKSTATUS[userReadStatus.currentlyReading] += 1;\n          return;\n\n        case 'READ':\n          BOOKSTATUS[userReadStatus.booksRead] += 1;\n          return;\n\n        case 'TO_READ':\n          BOOKSTATUS[userReadStatus.toRead] += 1;\n          return;\n\n        default:\n          return;\n      }\n    });\n  };\n\n  const createOverviewData = () => {\n    let UserOverviewData = [];\n    let index = 0;\n    Object.entries(BOOKSTATUS).map(_ref => {\n      let [statusName, count] = _ref;\n      UserOverviewData.push({\n        name: statusName,\n        number: count,\n        image: IMAGESTATUS[index]\n      });\n      index += 1;\n      return;\n    });\n    return UserOverviewData;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, props.isNewUser ? /*#__PURE__*/React.createElement(EmptyScreenTemplate, {\n    emptyScreenComponents: /*#__PURE__*/React.createElement(EmptyScreenComponents, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 63\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(HomeScreenTemplate, {\n    overviewList: /*#__PURE__*/React.createElement(OverviewList, {\n      overviews: overViewStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 35\n      }\n    }),\n    banner: /*#__PURE__*/React.createElement(Banner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }),\n    booksReading: /*#__PURE__*/React.createElement(BooksReadingList, {\n      booksList: recommendedBooks.slice(0, 4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 35\n      }\n    }),\n    recommendedBooksList: /*#__PURE__*/React.createElement(BookCardList, {\n      booksList: recommendedBooks.slice(4, 8),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 43\n      }\n    }),\n    followersReadingList: /*#__PURE__*/React.createElement(BookCardList, {\n      booksList: recommendedBooks.slice(8, 12),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 43\n      }\n    }),\n    topicsFollowingList: /*#__PURE__*/React.createElement(TopicsFollowingList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 42\n      }\n    }),\n    topRatingsList: /*#__PURE__*/React.createElement(BookCardList, {\n      booksList: recommendedBooks.slice(12, 16),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }));\n}\n\n_s(HomeScreenPage, \"2UcLQZfAwhKxi9dA+z5rw4K5RXs=\");\n\n_c = HomeScreenPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreenPage\");","map":{"version":3,"sources":["/home/dattd/Pictures/bootcamp-5/bc-5-frontend/src/pages/HomeScreenPage/index.js"],"names":["React","useEffect","useState","getAllBooks","getBooksReading","Banner","BookCardList","BooksReadingList","EmptyScreenComponents","OverviewList","TopicsFollowingList","EmptyScreenTemplate","HomeScreenTemplate","overviewImages","userReadStatus","HomeScreenPage","props","recommendedBooks","setRecommendedBooks","overViewStatus","setOverviewStatus","flag","getBooks","getBooksReadingList","userTarget","BOOKSTATUS","currentlyReading","toRead","booksRead","target","IMAGESTATUS","books","userBooks","updateStatusCount","overViewStatsData","createOverviewData","console","log","readingBooks","map","book","readStatus","UserOverviewData","index","Object","entries","statusName","count","push","name","number","image","isNewUser","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getAllBooks, getBooksReading } from '../.../../../service/BookManagementService'\nimport Banner from '../../components/molecules/Banner'\nimport BookCardList from '../../components/organisms/BookCardList'\nimport BooksReadingList from '../../components/organisms/BooksReadingList'\nimport EmptyScreenComponents from '../../components/organisms/EmptyScreen'\nimport OverviewList from '../../components/organisms/OverviewList'\nimport TopicsFollowingList from '../../components/organisms/TopicsFollowingList'\nimport EmptyScreenTemplate from '../../templates/EmptyScreenTemplate'\nimport HomeScreenTemplate from '../../templates/HomeScreenTemplate'\nimport { overviewImages, userReadStatus } from '../../utils/constants'\n\n\nexport default function HomeScreenPage(props) {\n\n\n    const [recommendedBooks, setRecommendedBooks] = useState([]);\n    const [overViewStatus, setOverviewStatus] = useState([]);\n    const flag = true;\n    useEffect(() => {\n        getBooks()\n        getBooksReadingList()\n    }, [props.userTarget])\n\n\n    let BOOKSTATUS = {\n        [userReadStatus.currentlyReading]: 0,\n        [userReadStatus.toRead]: 0,\n        [userReadStatus.booksRead]: 0,\n        [userReadStatus.target]: props.userTarget\n    }\n\n    let IMAGESTATUS = [\n        overviewImages.currentlyReading,\n        overviewImages.toRead,\n        overviewImages.booksRead,\n        overviewImages.target]\n\n\n    const getBooks = async () => {\n        const books = await getAllBooks()\n        setRecommendedBooks(books)\n    }\n\n    const getBooksReadingList = async () => {\n        const userBooks = await getBooksReading()\n        updateStatusCount(userBooks)\n        const overViewStatsData = createOverviewData()\n        console.log(\"overview\", overViewStatus)\n        setOverviewStatus(overViewStatsData)\n    }\n\n    const updateStatusCount = (readingBooks) => {\n\n        readingBooks.map(book => {\n            switch (book.readStatus) {\n                case 'READING':\n                    BOOKSTATUS[userReadStatus.currentlyReading] += 1\n                    return\n                case 'READ':\n                    BOOKSTATUS[userReadStatus.booksRead] += 1\n                    return\n                case 'TO_READ':\n                    BOOKSTATUS[userReadStatus.toRead] += 1\n                    return\n                default:\n                    return\n            }\n        })\n    }\n\n\n    const createOverviewData = () => {\n        let UserOverviewData = []\n        let index = 0\n        Object.entries(BOOKSTATUS).map(([statusName, count]) => {\n            UserOverviewData.push({\n                name: statusName,\n                number: count,\n                image: IMAGESTATUS[index]\n            })\n            index += 1\n            return\n        })\n        return UserOverviewData\n    }\n\n    return (\n        <div>\n            {props.isNewUser\n                ? <EmptyScreenTemplate emptyScreenComponents={<EmptyScreenComponents />} />\n                : <HomeScreenTemplate\n                    overviewList={<OverviewList overviews={overViewStatus} />}\n                    banner={<Banner />}\n                    booksReading={<BooksReadingList booksList={recommendedBooks.slice(0, 4)} />}\n                    recommendedBooksList={<BookCardList booksList={recommendedBooks.slice(4, 8)} />}\n                    followersReadingList={<BookCardList booksList={recommendedBooks.slice(8, 12)} />}\n                    topicsFollowingList={<TopicsFollowingList />}\n                    topRatingsList={<BookCardList booksList={recommendedBooks.slice(12, 16)} />}\n                />\n            }\n        </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}